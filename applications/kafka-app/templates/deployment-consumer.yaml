apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-consumer-api
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.consumer.replicas }}
  selector:
    matchLabels:
      app: kafka-consumer-api
  template:
    metadata:
      labels:
        app: kafka-consumer-api
    spec:
      containers:
      - name: consumer-api
        image: {{ .Values.imageRegistry }}/kafka-consumer-api:{{ .Values.consumer.imageTag }}
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: db-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: db-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: db-config
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: db-config
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: DB_PASSWORD
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30